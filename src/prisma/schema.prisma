generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "sqlite"
   url      = env("DATABASE_URL")
}

model Operator {
   id        String   @id @unique @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   name  String
   rules LMRule[]
}

model Affiliate {
   id        String   @id @unique @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   name  String
   rules LMRule[]
}

model LMRule {
   id        String   @id @unique @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   name        String
   description String

   ghlContactStatus            String
   waitTimeForCustomerResponse Int?

   notification   LMRuleNotification? @relation(fields: [notificationId], references: [id], onUpdate: Cascade, onDelete: Cascade)
   notificationId String?             @unique

   operators  Operator[]
   affiliates Affiliate[]
}

model LMRuleNotification {
   id        String   @id @unique @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   role      LMRule?

   notificationType     String
   notificationAttempts LMRuleNotificationAttempt[]

   escalateToSupervisor   Boolean
   supervisorTextTemplate String
}

model LMRuleNotificationAttempt {
   id        String   @id @unique @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   num          Int
   textTemplate String
   waitTime     Int

   roleNotification   LMRuleNotification? @relation(fields: [roleNotificationId], references: [id])
   roleNotificationId String?
}
